services:
  db:
    image: mariadb:10.5
    environment:
      MYSQL_ROOT_PASSWORD: supersecurepassword!
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    depends_on:
      - db
    environment:
      PMA_HOST: db
    ports:
      - "8080:80"

  create-service:
    build: ./create-service-haskell
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PORT: ${DATABASE_PORT}
    ports:
      - "5001:5001"
    depends_on:
      - db

  read-service:
    build: ./read-service-go
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PORT: ${DATABASE_PORT}
    ports:
      - "5002:5002"
    depends_on:
      - db

  update-service:
    build: ./update-service-rust
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PORT: ${DATABASE_PORT}
    ports:
      - "5003:5003"
    depends_on:
      - db

  delete-service:
    build: ./delete-service-erlang
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PORT: ${DATABASE_PORT}
    ports:
      - "5004:5004"
    depends_on:
      - db

  api-gateway:
    image: nginx:latest
    volumes:
      - ./api-gateway.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    depends_on:
      - create-service
      - read-service
      - update-service
      - delete-service

  todo-frontend:
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - create-service
      - read-service
      - update-service
      - delete-service

volumes:
  mysql_data: